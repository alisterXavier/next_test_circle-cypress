# # This config file checks for changes in the frontend folder and backend folder and if there are changes in
# # the frontend folder i will create a new config file to test and upload the frontend to production and the same for the
# # backend

# version: 2.1

# # setup: true

# orbs:
  
#   the-great:
#     orbs:
#       continuation: circleci/continuation@0.5.0

#     commands:
#       frontend-and-server-diff:
#         steps:
#           - checkout

#           - run:
#               name: Fetch branches
#               command: |
#                 git fetch origin
#                 git branch -a
#                 git checkout main 
#           - run:
#               name: Frontend diff
#               command: |
#                 if git diff --quiet main..main2.0 -- ./app; then 
#                   echo "No changes in specified folder."
#                 else 
#                   echo "frontend" >> ./modules.txt
#                   echo "Changes detected continuing with build";
#                 fi

#           - run:
#               name: Server diff
#               command: |
#                 if git diff --quiet main..main2.0 -- ./server; then 
#                   echo "No changes in specified folder."
#                 else 
#                   echo "server" >> ./modules.txt
#                   echo "Changes detected continuing with build";
#                 fi

#           - store_artifacts:
#               path: ./modules.txt

#       merge-configs:
#         parameters:
#           modules:
#             type: string
#             default: ./modules.txt
#           frontend-config-loc:
#             type: string
#             default: ./frontend-config.yml
#           server-config-loc:
#             type: string
#             default: ./server-config.yml
#           continue-config:
#             type: string
#             default: .circleci/continue-config.yml
#         steps:
#           - checkout

#           - run:
#               name: Merge configs
#               command: |
#                 # If `modules` is unavailable, stop this job without continuation
#                 if [ ! -f "<< parameters.modules >>" ] || [ ! -s "<< parameters.modules >>" ]
#                 then
#                   echo 'Nothing to merge. Halting the job.'
#                   circleci-agent step halt
#                   exit
#                 fi

#                 # Convert a list of dirs to a list of config.yml
#                 sed -i -e 's/^/.circleci\//; s/$/-config.yml/g' "<< parameters.modules >>"

#                 xargs -a "<< parameters.modules >>" yq -y -s 'reduce .[] as $item ({}; . * $item)' | tee "<< parameters.continue-config >>"

#     jobs:
#       the-greatest-showman:
#         docker:
#           - image: cimg/python:3.9
#         steps:
#           - checkout
#           - run:
#               name: Install yq
#               command: pip install yq
#           - frontend-and-server-diff
#           - merge-configs
#           - continuation/continue:
#               configuration_path: .circleci/continue-config.yml

# workflows:
#   the_great-gatsby:
#     jobs:
#       - the-great/the-greatest-showman:
#           filters:
#             branches:
#               only:
#                 - main2.0










# TODO tests are not yet completed
version: 2.1
setup: true

orbs:
  cypress: cypress-io/cypress@3

jobs:
  e2e-tests:
    docker:
      - image: node:latest

    steps:
      - checkout

      - run:
          name: update apt
          command: apt-get update

      - run:
          name: install system deps
          command: apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

      - run:
          name: Install deps
          command: "cd ./app && npm install"

      - run:
          name: Run app in background
          command: "cd ./app && npm run dev"
          background: true
      
      - run:
          name: Wait for app to be ready
          command: npx wait-on@latest http://localhost:3000

      - cypress/run-tests:
          # start-command: npm run dev
          cypress-command: "npx cypress run"
          working-directory: ./app

      - store_artifacts:
          path: ./app/cypress/screenshots
          when: on_fail

workflows:
  the-great-gatsby:
    jobs:
      - e2e-tests:
          filters:
            branches:
              only:
                - main2.0
